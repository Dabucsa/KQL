// Detectar operaciones DDL peligrosas
Event
| where TimeGenerated >= ago(24h)
| where EventLog == "Application"
| where Source has_any ("MSSQLSERVER","MSSQL$","SQLSERVERAGENT")
| where EventID in (33205, 33206)
| where RenderedDescription has_any (
    "DROP DATABASE",
    "DROP TABLE",
    "TRUNCATE TABLE",
    "ALTER DATABASE",
    "RESTORE DATABASE",
    "BACKUP DATABASE",
    "DETACH",
    "sp_detach_db"
)
| extend Executor = coalesce(
    extract(@"principal_name=([^;,\s]+)", 1, RenderedDescription),
    extract(@"login_name=([^;,\s]+)", 1, RenderedDescription)
)
| extend ObjectName = coalesce(
    extract(@"(?:DROP|ALTER|TRUNCATE|BACKUP|RESTORE)\s+(?:DATABASE|TABLE)\s+\[?([^\]\s,;]+)\]?", 1, RenderedDescription),
    extract(@"database_name=([^;,\s]+)", 1, RenderedDescription)
)
| extend Operation = case(
    RenderedDescription has "DROP DATABASE", "DROP_DATABASE",
    RenderedDescription has "DROP TABLE", "DROP_TABLE",
    RenderedDescription has "TRUNCATE", "TRUNCATE_TABLE",
    RenderedDescription has "ALTER DATABASE", "ALTER_DATABASE",
    RenderedDescription has "RESTORE", "RESTORE_DATABASE",
    RenderedDescription has "BACKUP", "BACKUP_DATABASE",
    RenderedDescription has "DETACH", "DETACH_DATABASE",
    "OTHER"
)
| extend Severity = case(
    Operation in ("DROP_DATABASE", "DETACH_DATABASE"), "CRITICAL",
    Operation in ("DROP_TABLE", "TRUNCATE_TABLE"), "HIGH",
    "MEDIUM"
)
| extend ActionResult = iff(EventID == 33205, "SUCCESS", "FAILURE")
| extend Hour = hourofday(TimeGenerated)
| extend IsOffHours = iff(Hour < 8 or Hour > 18, "YES", "NO")
| where isnotempty(ObjectName)
| project 
    TimeGenerated,
    Computer,
    Severity,
    Operation,
    ActionResult,
    Executor,
    ObjectName,
    IsOffHours,
    EventID,
    RenderedDescription
| order by Severity desc, TimeGenerated desc
