// ============================================
// OPERACIONES DE DATOS - AZURE ARC (SIMPLE)
// DELETE, UPDATE, INSERT, TRUNCATE, MERGE
// ============================================
let RangoDias = 30d;
Event
| where TimeGenerated >= ago(RangoDias)
| where EventLog == "Application"
| where Source has_any ("MSSQLSERVER","MSSQL$","SQLSERVERAGENT")
| where EventID == 33205
| where RenderedDescription has_any ("DELETE", "UPDATE", "TRUNCATE", "INSERT", "MERGE")
// Extracciones básicas
| extend ServerPrincipalName = trim(@"\s", extract(@"server_principal_name:([^\s]+(?:\s+[^\s]+)*?)(?:\s+server_principal_sid:|$)", 1, RenderedDescription))
| extend SessionServerPrincipalName = trim(@"\s", extract(@"session_server_principal_name:([^\s]+(?:\s+[^\s]+)*?)(?:\s+server_principal_name:|$)", 1, RenderedDescription))
| extend DatabasePrincipalName = trim(@"\s", extract(@"database_principal_name:([^\s]+(?:\s+[^\s]+)*?)(?:\s+target_server_principal_name:|$)", 1, RenderedDescription))
| extend Usuario = coalesce(
    iff(DatabasePrincipalName != "" and DatabasePrincipalName != "dbo", DatabasePrincipalName, ""),
    iff(ServerPrincipalName != "", ServerPrincipalName, ""),
    iff(SessionServerPrincipalName != "", SessionServerPrincipalName, ""),
    "NO_IDENTIFICADO"
)
| extend DatabaseName = trim(@"\s", extract(@"database_name:([^\s]+)", 1, RenderedDescription))
| extend SQLStatement = trim(@"\s", extract(@"statement:([^\s]+(?:\s+[^\s]+)*?)(?:\s+additional_information:|$)", 1, RenderedDescription))
| extend Succeeded = extract(@"succeeded:([^\s]+)", 1, RenderedDescription)
// Tipo de operación
| extend Operacion = case(
    SQLStatement has "DELETE", "DELETE",
    SQLStatement has "UPDATE", "UPDATE",
    SQLStatement has "INSERT", "INSERT",
    SQLStatement has "TRUNCATE", "TRUNCATE",
    SQLStatement has "MERGE", "MERGE",
    "OTRO"
)
// Proyecto simple
| project 
    FechaHora = TimeGenerated,
    Operacion,
    Usuario,
    Servidor = Computer,
    BaseDatos = iff(DatabaseName == "", "N/A", DatabaseName),
    Exito = iff(Succeeded == "true", "SI", "NO"),
    Comando = SQLStatement
| order by FechaHora desc
| take 100
